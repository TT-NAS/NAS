from enum import Enum


class Encoding(Enum):
    DECODED = "decoded"
    REAL = "real"
    BINARY = "binary"


# Variables de decisión para un cromosoma binario,
# la representación real se obtiene a partir de estas variables
VALID_FILTERS = {
    "0001": 1,
    "0011": 2,
    "0010": 4,
    "0110": 8,
    "0111": 16,
    "0101": 32,
    "0100": 64,
    "1100": 128,
    "1101": 256,
    "1111": 512,
    "1110": 1024,
}
FILTERS = {
    "0000": None,
} | VALID_FILTERS
KERNEL_SIZES = {
    "00": 1,
    "01": 3,
    "11": 5,
}
ACTIVATION_FUNCTIONS = {
    "0000": "linear",
    "0001": "relu",
    "0011": "softplus",
    "0010": "elu",
    "0110": "selu",
    "0111": "sigmoid",
    "0101": "tanh",
    "0100": "softsign",
    "1100": "softmax"
}

VALID_POOLINGS = {
    "01": "max",
    "11": "average",
}
POOLINGS = {
    "00": None
} | VALID_POOLINGS
CONCATENATION = {
    "0": False,
    "1": True,
}

# Restricciones para el tamaño de las redes
MAX_LAYERS = 4
MAX_CONVS_PER_LAYER = 2

LEN_FILTERS_REAL = 1
LEN_KERNEL_SIZE_REAL = 1
LEN_ACTIVATION_REAL = 1
LEN_POOLINGS_REAL = 1
LEN_CONCAT_REAL = 1
LEN_CONV_REAL = LEN_FILTERS_REAL + LEN_KERNEL_SIZE_REAL + LEN_ACTIVATION_REAL
LEN_CONVS_REAL = MAX_CONVS_PER_LAYER * LEN_CONV_REAL
LEN_LAYER_REAL = (
    LEN_CONVS_REAL + LEN_POOLINGS_REAL +
    LEN_CONVS_REAL + LEN_CONCAT_REAL
)
LEN_CHROMOSOME_REAL = (
    MAX_LAYERS * LEN_LAYER_REAL + LEN_CONVS_REAL
)

LEN_FILTERS_BIN = 4
LEN_KERNEL_SIZE_BIN = 2
LEN_ACTIVATION_BIN = 4
LEN_POOLINGS_BIN = 2
LEN_CONCAT_BIN = 1
LEN_CONV_BIN = LEN_FILTERS_BIN + LEN_KERNEL_SIZE_BIN + LEN_ACTIVATION_BIN
LEN_CONVS_BIN = MAX_CONVS_PER_LAYER * LEN_CONV_BIN
LEN_LAYER_BIN = (
    LEN_CONVS_BIN + LEN_POOLINGS_BIN +
    LEN_CONVS_BIN + LEN_CONCAT_BIN
)
LEN_CHROMOSOME_BIN = (
    MAX_LAYERS * LEN_LAYER_BIN + LEN_CONVS_BIN
)

# Valores que representan una capa de identidad en un cromosoma real y binario
IDENTITY_FILTERS_REAL = [1 / len(FILTERS)]  # f=None
IDENTITY_KERNEL_SIZE_REAL = [1 / len(KERNEL_SIZES)]  # s=1
IDENTITY_ACTIVATION_REAL = [1 / len(ACTIVATION_FUNCTIONS)]  # a=linear
IDENTITY_POOLING_REAL = [1 / len(POOLINGS)]  # p=None
IDENTITY_CONCAT_REAL = [1 / len(CONCATENATION)]  # concat=False
IDENTITY_CONV_REAL = (
    IDENTITY_FILTERS_REAL +
    IDENTITY_KERNEL_SIZE_REAL +
    IDENTITY_ACTIVATION_REAL
)
IDENTITY_LAYER_REAL = (
    MAX_CONVS_PER_LAYER * IDENTITY_CONV_REAL + IDENTITY_POOLING_REAL +
    MAX_CONVS_PER_LAYER * IDENTITY_CONV_REAL + IDENTITY_CONCAT_REAL
)

IDENTITY_FILTERS_BIN = "0000"  # f=None
IDENTITY_KERNEL_SIZE_BIN = "00"  # s=1
IDENTITY_ACTIVATION_BIN = "0000"  # a=linear
IDENTITY_POOLING_BIN = "00"  # p=None
IDENTITY_CONCAT_BIN = "0"  # concat=False
IDENTITY_CONV_BIN = (
    IDENTITY_FILTERS_BIN +
    IDENTITY_KERNEL_SIZE_BIN +
    IDENTITY_ACTIVATION_BIN
)
IDENTITY_LAYER_BIN = (
    MAX_CONVS_PER_LAYER * IDENTITY_CONV_BIN + IDENTITY_POOLING_BIN +
    MAX_CONVS_PER_LAYER * IDENTITY_CONV_BIN + IDENTITY_CONCAT_BIN
)
